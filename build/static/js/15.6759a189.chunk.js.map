{"version":3,"sources":["Containers/Sing/Login.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Operations/operationsAuth.js"],"names":["initialState","email","password","Login","useState","form","setForm","dispatch","useDispatch","inputHolder","target","name","value","useEffect","Loader","className","onSubmit","e","preventDefault","userLogin","type","placeholder","onChange","to","navigation","registration","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","baseURL","createNewUser","userData","a","axios","method","url","data","result","changeOptions","Token","token","console","log","Name","user","userLoginOut","headers","Authorization","getUserInfo","setUserInfo"],"mappings":"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","file":"static/js/15.6759a189.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { navigation } from \"../../vars\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Loader } from \"../../redux/slice/Loader\";\r\nimport { userLogin } from \"../../Components/Operations/operationsAuth\";\r\n\r\nimport \"./Sing.css\";\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Login = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputHolder = ({ target }) => {\r\n    const { name, value } = target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userLogin(form));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(Loader(false));\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">Login</h1>\r\n      <form className=\"login-form\" onSubmit={onSubmit}>\r\n        <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={inputHolder} />\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={inputHolder} />\r\n        <button type=\"submit\">Sing in</button>\r\n        <p>\r\n          If you do not have any account, please <NavLink to={navigation.registration}>registration</NavLink>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from \"axios\";\r\nimport { Loader } from \"../../redux/slice/Loader\";\r\nimport { changeOptions } from \"../../redux/slice/Options\";\r\nimport { setUserInfo } from \"../../redux/slice/UserInfo\";\r\n\r\nconst baseURL = \"https://goit-phonebook-api.herokuapp.com/users/\";\r\n\r\nexport const createNewUser = (userData) => async (dispatch) => {\r\n  try {\r\n    // console.log(userData);\r\n    dispatch(Loader(true));\r\n    const result = await axios({\r\n      method: \"post\",\r\n      url: baseURL + \"signup\",\r\n      data: userData,\r\n    });\r\n    dispatch(changeOptions({ Token: result.data.token }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(Loader(false));\r\n  }\r\n};\r\n\r\nexport const userLogin = (userData) => async (dispatch) => {\r\n  try {\r\n    // console.log(userData);\r\n    dispatch(Loader(true));\r\n    const result = await axios({\r\n      method: \"post\",\r\n      url: baseURL + \"login\",\r\n      data: userData,\r\n    });\r\n    dispatch(changeOptions({ Token: result.data.token, Name: result.data.user.name }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(Loader(false));\r\n  }\r\n};\r\n\r\nexport const userLoginOut = (token) => async (dispatch) => {\r\n  try {\r\n    // console.log(userData);\r\n    dispatch(Loader(true));\r\n    // const result = await axios.post(baseURL + \"/users/logout\", token);\r\n    await axios({\r\n      method: \"post\",\r\n      url: baseURL + \"logout\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch(changeOptions({ Token: null, Name: \"\" }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(Loader(false));\r\n  }\r\n};\r\n\r\nexport const getUserInfo = (token) => async (dispatch) => {\r\n  try {\r\n    // console.log(userData);\r\n    dispatch(Loader(true));\r\n    // const result = await axios.post(baseURL + \"/users/logout\", token);\r\n    const result = await axios({\r\n      method: \"\",\r\n      url: baseURL + \"current\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch(setUserInfo(result.data));\r\n    // dispatch(changeOptions({ Token: null, Name: \"\" }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(Loader(false));\r\n  }\r\n};\r\n"],"sourceRoot":""}