{"version":3,"sources":["redux/actions/MovieActions.js","Components/MovieDetailsPage/MovieDetailsPage.js","Components/helpers/vars.js","redux/actions/loaderActions.js","Components/helpers/request.js","Components/Storage/Storage.js","redux/actions/FavoriteActions.js"],"names":["DetalMovie","value","type","DETALMOVIESTYPE","payload","Cast","lazy","Reviews","Trailer","Storage","match","url","state","useSelector","dispatch","useDispatch","detalMovie","title","poster_path","backdrop_path","budget","genres","runtime","revenue","popularity","tagline","status","homepage","original_title","overview","production_companies","production_countries","release_date","spoken_languages","vote_average","id","movieId","Number","useParams","useEffect","request","getMovie","then","response","catch","error","console","log","finally","Loader","className","alt","src","imgUrlOriginal","imgNon","Rating","readOnly","name","defaultValue","max","precision","size","length","map","item","key","Math","trunc","origin_country","iso_639_1","iso_3166_1","Button","variant","color","onClick","favoriteMovie","find","removeFavorite","addFavorite","to","href","target","disabled","fallback","path","render","props","imgUrl","API_KEY","process","URL","LANG","region","year","adult","LOADERTYPE","getHomeMovie","page","homeLoad","getSearch","search","getActors","method","a","body","axios","result","data","withStorage","NestedComponents","saveToStorage","localStorage","setItem","JSON","stringify","Error","getFromStorage","getItem","parse","removeFromStorage","removeItem","this","Component","FAVORITEMOVIESADD","FAVORITEMOVIESREMOVE"],"mappings":"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","file":"static/js/11.80217f4e.chunk.js","sourcesContent":["import { DETALMOVIESTYPE } from \"../constants\";\r\n\r\nconst DetalMovie = (value) => ({\r\n  type: DETALMOVIESTYPE,\r\n  payload: value,\r\n});\r\nexport default DetalMovie;\r\n","import React, { useEffect, Suspense, lazy } from \"react\";\r\nimport { useParams, NavLink, Switch, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n\r\nimport { getMovie, request } from \"../helpers/request\";\r\nimport { imgUrlOriginal, imgNon } from \"../helpers/vars\";\r\nimport Storage from \"../../Components/Storage/Storage\";\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../redux/actions/loaderActions\";\r\nimport DetalMovie from \"../../redux/actions/MovieActions\";\r\nimport { addFavorite, removeFavorite } from \"../../redux/actions/FavoriteActions\";\r\n\r\nimport \"./MovieDetailsPage.css\";\r\n\r\n// import Cast from \"../Cast/Cast\";\r\n// import Reviews from \"../Reviews/Reviews\";\r\n// import Trailer from \"../Trailer/Trailer\";\r\nconst Cast = lazy(() => import(\"../Cast/Cast.js\"));\r\nconst Reviews = lazy(() => import(\"../Reviews/Reviews.js\"));\r\nconst Trailer = lazy(() => import(\"../Trailer/Trailer.js\"));\r\n\r\nconst MovieDetailsPage = ({ match }) => {\r\n  const { url } = match;\r\n  const state = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    title,\r\n    poster_path,\r\n    backdrop_path,\r\n    budget,\r\n    genres = [],\r\n    runtime,\r\n    revenue,\r\n    popularity,\r\n    tagline,\r\n    status,\r\n    homepage,\r\n    original_title,\r\n    overview,\r\n    production_companies = [],\r\n    production_countries = [],\r\n    release_date,\r\n    spoken_languages = [],\r\n    vote_average,\r\n    // vote_count,\r\n    id,\r\n  } = state.detalMovie;\r\n  const movieId = Number(useParams().id);\r\n\r\n  const favoriteToggle = () => {\r\n    if (state.favoriteMovie.find((item) => item.id === movieId)) {\r\n      dispatch(removeFavorite(movieId));\r\n      return;\r\n    }\r\n    dispatch(addFavorite({ poster_path: poster_path, backdrop_path: backdrop_path, id: id, title: title }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    request(\"get\", getMovie(movieId))\r\n      .then((response) => dispatch(DetalMovie(response)))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => dispatch(Loader(false)));\r\n  }, [match.url, movieId, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"singleMovie\">\r\n        {title ? (\r\n          <div className=\"singleMovie__container\">\r\n            <img className=\"singleMovie__poster\" alt={title} src={poster_path ? imgUrlOriginal + poster_path : backdrop_path ? imgUrlOriginal + backdrop_path : imgNon}></img>\r\n            <ul className=\"singleMovie__info\">\r\n              {title && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Title: </span> {title}\r\n                </li>\r\n              )}\r\n              {original_title !== title && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Original title: </span> {original_title}\r\n                </li>\r\n              )}\r\n              {overview && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Overview: </span> {overview}\r\n                </li>\r\n              )}\r\n              {vote_average > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item--center\">\r\n                  <Rating readOnly={true} name=\"customized-10\" defaultValue={vote_average} max={10} precision={0.5} size=\"large\" />\r\n                  {/* <span>Rate: </span> {vote_average}/{vote_count} */}\r\n                </li>\r\n              )}\r\n              {budget > 0 && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Budget: </span> {budget}$\r\n                </li>\r\n              )}\r\n              {revenue > 0 && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>revenue: </span> {revenue}$\r\n                </li>\r\n              )}\r\n              {genres.length > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item-list\">\r\n                  <span>genres: </span>\r\n                  <ul>\r\n                    {genres.map((item) => (\r\n                      <li key={item.id}>{item.name}</li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              )}\r\n              {release_date && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Data: </span> {release_date}\r\n                </li>\r\n              )}\r\n              {runtime > 0 && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>runtime: </span> {`${Math.trunc(runtime / 60)}:${runtime % 60 < 10 ? (runtime % 60) + \"0\" : runtime % 60}`}\r\n                </li>\r\n              )}\r\n              {production_companies.length > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item-list\">\r\n                  <span>Production companies: </span>\r\n                  <ul>\r\n                    {production_companies.map((item) => (\r\n                      <li key={item.name}>\r\n                        {item.name} {item.origin_country && \"(\" + item.origin_country + \")\"}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              )}\r\n              {spoken_languages.length > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item-list\">\r\n                  <span>languages: </span>\r\n                  <ul>\r\n                    {spoken_languages.map((item) => (\r\n                      <li key={item.name}>\r\n                        {item.name} ({item.iso_639_1})\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              )}\r\n              {production_countries.length > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item-list\">\r\n                  <span>production countries: </span>{\" \"}\r\n                  <ul>\r\n                    {production_countries.map((item) => (\r\n                      <li key={item.iso_3166_1}>\r\n                        {item.name}({item.iso_3166_1})\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              )}\r\n              {popularity > 0 && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Popularity: </span> {popularity}\r\n                </li>\r\n              )}\r\n              {status && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Status: </span> {status}\r\n                </li>\r\n              )}\r\n              {tagline && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Tag line: </span> {tagline}\r\n                </li>\r\n              )}\r\n\r\n              <li className=\"singleMovie__item\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={favoriteToggle}>\r\n                  {state.favoriteMovie.find((item) => item.id === movieId) ? \"remove from\" : \"add to\"} favorite\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  <NavLink to={`${url}/cast`}>Actors</NavLink>\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  <NavLink to={`${url}/trailer`}>trailer</NavLink>\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" href={homepage} target=\"_blank\" disabled={homepage ? false : true}>\r\n                  homepage\r\n                </Button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <h1 className=\"errorMessage\">\r\n            404\r\n            <br />\r\n            Information not found\r\n          </h1>\r\n        )}\r\n        <Suspense fallback={<p>Compaling...</p>}>\r\n          <Switch>\r\n            <Route path={`${url}/reviews`} render={(props) => <Reviews {...props} id={id} />} />\r\n            <Route path={`${url}/cast`} render={(props) => <Cast {...props} id={id} />} />\r\n            <Route path={`${url}/trailer`} render={(props) => <Trailer {...props} movieId={id} />} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Storage(MovieDetailsPage);\r\n\r\nMovieDetailsPage.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n","// const img = [\"w500\", \"original\"];\r\n\r\nexport const imgUrl = \"https://image.tmdb.org/t/p/w500/\";\r\nexport const imgUrlOriginal = \"https://image.tmdb.org/t/p/original/\";\r\nexport const imgNon = \"https://cdn.shopify.com/s/files/1/1841/2299/products/032_RGB_grande.jpg?v=1589096608\";\r\n\r\n// request\r\nexport const API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const URL = \"https://api.themoviedb.org/3\";\r\nexport const LANG = \"&language=en-US\";\r\nexport const region = \"&region=ua\";\r\nexport const year = \"&primary_release_year=2020\";\r\nexport const adult = \"&include_adult=false\";\r\n","import { LOADERTYPE } from \"../constants\";\r\n\r\nconst Loader = (value) => ({\r\n  type: LOADERTYPE,\r\n  payload: value,\r\n});\r\nexport default Loader;\r\n","import axios from \"axios\";\r\n\r\nimport { API_KEY, URL, LANG, region, year, adult } from \"./vars\";\r\n\r\nexport const getHomeMovie = (page, homeLoad) => {\r\n  return `${URL}/movie/${homeLoad}?api_key=${API_KEY}${region}&page=${page}${year}`;\r\n};\r\n\r\nexport const getSearch = (search, page = 1) => {\r\n  return `${URL}/search/movie?api_key=${API_KEY}${LANG}&query=${search}&page=${page}${adult}`;\r\n};\r\n\r\nexport const getMovie = (id, type = \"\") => {\r\n  return `${URL}/movie/${id}${type}?api_key=${API_KEY}`;\r\n};\r\nexport const getActors = (id) => {\r\n  return `${URL}/credit/${id}?api_key=${API_KEY}`;\r\n};\r\nexport const request = async (method, url, body = null) => {\r\n  const result = await axios[method](url, body);\r\n  return result.data;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nconst withStorage = (NestedComponents) => {\r\n  return class extends Component {\r\n    saveToStorage = (key, value) => {\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    };\r\n    getFromStorage = (key) => {\r\n      try {\r\n        const value = localStorage.getItem(key);\r\n        return value ? JSON.parse(value) : null;\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    };\r\n    removeFromStorage = (key) => {\r\n      try {\r\n        localStorage.removeItem(key);\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    };\r\n    render() {\r\n      return <NestedComponents {...this.props} {...this} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default withStorage;\r\n","import { FAVORITEMOVIESADD, FAVORITEMOVIESREMOVE } from \"../constants\";\r\n\r\nexport const addFavorite = (value) => ({\r\n  type: FAVORITEMOVIESADD,\r\n  payload: value,\r\n});\r\n\r\nexport const removeFavorite = (id) => ({\r\n  type: FAVORITEMOVIESREMOVE,\r\n  payload: id,\r\n});\r\n"],"sourceRoot":""}