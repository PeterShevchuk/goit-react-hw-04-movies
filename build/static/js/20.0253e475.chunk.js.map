{"version":3,"sources":["Components/Trailer/Trailer.js"],"names":["Trailer","movieId","match","useState","trailer","setTrailer","dispatch","useDispatch","useEffect","Loader","parse","url","split","request","getMovie","then","response","results","catch","error","console","log","finally","length","map","item","site","key","id","title","name","width","height","src","allow","allowfullscreen"],"mappings":"0JA+BeA,UAtBC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAAY,EACRC,mBAAS,IADD,mBAC/BC,EAD+B,KACtBC,EADsB,KAEhCC,EAAWC,cAYjB,OAVAC,qBAAU,WACRF,EAASG,aAAO,IAChB,IAAMC,EAAQR,EAAMS,IAAIC,MAAM,KAC9BC,YAAQ,MAAOC,YAASb,GAAoBS,EAAM,GAAI,YACnDK,MAAK,SAACC,GACLX,EAAWW,EAASC,YAErBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAC7BG,SAAQ,kBAAMhB,EAASG,aAAO,SAChC,CAACR,EAASC,EAAMS,IAAKL,IAEtB,oCACE,4BAAKF,EAAQmB,OAAS,WAAa,eAClCnB,GAAWA,EAAQoB,KAAI,SAACC,GAAD,MAAwB,YAAdA,EAAKC,MAAsB,4BAAQC,IAAKF,EAAKG,GAAIC,MAAOJ,EAAKK,KAAMC,MAAM,SAASC,OAAO,MAAMC,IAAG,wCAAmCR,EAAKE,KAAOO,MAAM,0EAA0EC,iBAAe","file":"static/js/20.0253e475.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// redux\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Loader } from \"../../redux/slice/Loader\";\r\n\r\nimport { request, getMovie } from \"../helpers/request\";\r\n\r\nconst Trailer = ({ movieId, match }) => {\r\n  const [trailer, setTrailer] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(Loader(true));\r\n    const parse = match.url.split(\"/\");\r\n    request(\"get\", getMovie(movieId ? movieId : parse[2], \"/videos\"))\r\n      .then((response) => {\r\n        setTrailer(response.results);\r\n      })\r\n      .catch((error) => console.log(error))\r\n      .finally(() => dispatch(Loader(false)));\r\n  }, [movieId, match.url, dispatch]);\r\n  return (\r\n    <>\r\n      <h2>{trailer.length ? \"Trailers\" : \"No Trailers\"}</h2>\r\n      {trailer && trailer.map((item) => item.site === \"YouTube\" && <iframe key={item.id} title={item.name} width=\"1024px\" height=\"500\" src={`https://www.youtube.com/embed/${item.key}`} allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trailer;\r\n\r\nTrailer.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n"],"sourceRoot":""}