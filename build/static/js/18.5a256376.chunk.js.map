{"version":3,"sources":["Components/Header/Header.js","Components/Operations/operationsAuth.js"],"names":["Header","dispatch","useDispatch","LoadImage","useSelector","state","options","position","className","color","to","navigation","home","exact","movies","moviesFavorite","title","aria-label","control","checked","onChange","props","changeOptions","target","Token","onClick","getUserInfo","Name","userLoginOut","login","registration","baseURL","createNewUser","userData","a","Loader","axios","method","url","data","result","token","console","log","userLogin","user","name","headers","Authorization","setUserInfo"],"mappings":"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","file":"static/js/18.5a256376.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { AppBar, Toolbar, Button, Tooltip, FormControlLabel, Switch } from \"@material-ui/core\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userLoginOut, getUserInfo } from \"../../Components/Operations/operationsAuth\";\r\nimport { changeOptions } from \"../../redux/slice/Options\";\r\n\r\nimport { navigation } from \"../../vars\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const LoadImage = useSelector((state) => state.options.LoadImage);\r\n  const options = useSelector((state) => state.options);\r\n  const onChange = (props) => {\r\n    dispatch(changeOptions({ LoadImage: props.target.checked ? 1 : 0 }));\r\n  };\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className=\"header-nav\">\r\n        <Button color=\"inherit\">\r\n          <NavLink to={navigation.home} className=\"link\" exact>\r\n            Home\r\n          </NavLink>\r\n        </Button>\r\n        <Button color=\"inherit\">\r\n          <NavLink to={navigation.movies} className=\"link\">\r\n            Search movies\r\n          </NavLink>\r\n        </Button>\r\n        <Button color=\"inherit\">\r\n          <NavLink to={navigation.moviesFavorite} className=\"link\">\r\n            Favorite movies\r\n          </NavLink>\r\n        </Button>\r\n\r\n        <Tooltip title=\"Upload original or thumbnail images? Will start working after reloading the page\" aria-label=\"Upload original or thumbnail images?\">\r\n          <FormControlLabel control={<Switch checked={LoadImage === 1 ? true : false} onChange={onChange} />} />\r\n        </Tooltip>\r\n        {!options.Token ? (\r\n          <>\r\n            <Button color=\"inherit\">\r\n              <NavLink to={navigation.login} className=\"link\">\r\n                Login\r\n              </NavLink>\r\n            </Button>\r\n            <Button color=\"inherit\">\r\n              <NavLink to={navigation.registration} className=\"link\">\r\n                Registration\r\n              </NavLink>\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button color=\"inherit\" onClick={() => dispatch(getUserInfo(options.Token))}>\r\n              {options.Name}\r\n            </Button>\r\n            <Button color=\"inherit\" onClick={() => dispatch(userLoginOut(options.Token))}>\r\n              Login out\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\nimport { Loader } from \"../../redux/slice/Loader\";\r\nimport { changeOptions } from \"../../redux/slice/Options\";\r\nimport { setUserInfo } from \"../../redux/slice/UserInfo\";\r\n\r\nconst baseURL = \"https://goit-phonebook-api.herokuapp.com/users/\";\r\n\r\nexport const createNewUser = (userData) => async (dispatch) => {\r\n  try {\r\n    // console.log(userData);\r\n    dispatch(Loader(true));\r\n    const result = await axios({\r\n      method: \"post\",\r\n      url: baseURL + \"signup\",\r\n      data: userData,\r\n    });\r\n    dispatch(changeOptions({ Token: result.data.token }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(Loader(false));\r\n  }\r\n};\r\n\r\nexport const userLogin = (userData) => async (dispatch) => {\r\n  try {\r\n    // console.log(userData);\r\n    dispatch(Loader(true));\r\n    const result = await axios({\r\n      method: \"post\",\r\n      url: baseURL + \"login\",\r\n      data: userData,\r\n    });\r\n    dispatch(changeOptions({ Token: result.data.token, Name: result.data.user.name }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(Loader(false));\r\n  }\r\n};\r\n\r\nexport const userLoginOut = (token) => async (dispatch) => {\r\n  try {\r\n    // console.log(userData);\r\n    dispatch(Loader(true));\r\n    // const result = await axios.post(baseURL + \"/users/logout\", token);\r\n    await axios({\r\n      method: \"post\",\r\n      url: baseURL + \"logout\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch(changeOptions({ Token: null, Name: \"\" }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(Loader(false));\r\n  }\r\n};\r\n\r\nexport const getUserInfo = (token) => async (dispatch) => {\r\n  try {\r\n    // console.log(userData);\r\n    dispatch(Loader(true));\r\n    // const result = await axios.post(baseURL + \"/users/logout\", token);\r\n    const result = await axios({\r\n      method: \"\",\r\n      url: baseURL + \"current\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch(setUserInfo(result.data));\r\n    // dispatch(changeOptions({ Token: null, Name: \"\" }));\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(Loader(false));\r\n  }\r\n};\r\n"],"sourceRoot":""}