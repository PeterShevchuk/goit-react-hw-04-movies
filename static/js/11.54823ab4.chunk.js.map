{"version":3,"sources":["Components/MovieDetailsPage/MovieDetailsPage.js","Components/helpers/vars.js","Components/helpers/request.js","Components/Storage/Storage.js"],"names":["Cast","lazy","Reviews","Trailer","Storage","match","loaderToggle","saveToStorage","getFromStorage","url","useState","movie","setMovie","favorite","setFavorite","title","poster_path","backdrop_path","budget","genres","runtime","revenue","popularity","tagline","status","homepage","original_title","overview","production_companies","production_countries","release_date","spoken_languages","vote_average","id","movieId","Number","useParams","useEffect","getFavorite","find","item","request","getMovie","then","response","catch","error","console","log","finally","className","alt","src","imgUrlOriginal","imgNon","readOnly","name","defaultValue","max","precision","size","length","map","key","Math","trunc","origin_country","iso_639_1","iso_3166_1","variant","color","onClick","filter","newFavorite","to","href","target","disabled","fallback","path","render","props","imgUrl","API_KEY","process","URL","LANG","region","year","adult","getHomeMovie","page","homeLoad","getSearch","search","type","getActors","method","a","body","axios","result","data","withStorage","NestedComponents","value","localStorage","setItem","JSON","stringify","Error","getItem","parse","removeFromStorage","removeItem","this","Component"],"mappings":"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","file":"static/js/11.54823ab4.chunk.js","sourcesContent":["import React, { useEffect, useState, Suspense, lazy } from \"react\";\r\nimport { useParams, NavLink, Switch, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import Box from \"@material-ui/core/Box\";\r\n\r\nimport { getMovie, request } from \"../helpers/request\";\r\nimport { imgUrlOriginal, imgNon } from \"../helpers/vars\";\r\nimport Storage from \"../../Components/Storage/Storage\";\r\n\r\nimport \"./MovieDetailsPage.css\";\r\n\r\n// import Cast from \"../Cast/Cast\";\r\n// import Reviews from \"../Reviews/Reviews\";\r\n// import Trailer from \"../Trailer/Trailer\";\r\nconst Cast = lazy(() => import(\"../Cast/Cast.js\"));\r\nconst Reviews = lazy(() => import(\"../Reviews/Reviews.js\"));\r\nconst Trailer = lazy(() => import(\"../Trailer/Trailer.js\"));\r\n\r\nconst MovieDetailsPage = ({ match, loaderToggle, saveToStorage, getFromStorage }) => {\r\n  const { url } = match;\r\n\r\n  const [movie, setMovie] = useState([]);\r\n  const [favorite, setFavorite] = useState(false);\r\n\r\n  const {\r\n    title,\r\n    poster_path,\r\n    backdrop_path,\r\n    budget,\r\n    genres = [],\r\n    runtime,\r\n    revenue,\r\n    popularity,\r\n    tagline,\r\n    status,\r\n    homepage,\r\n    original_title,\r\n    overview,\r\n    production_companies = [],\r\n    production_countries = [],\r\n    release_date,\r\n    spoken_languages = [],\r\n    vote_average,\r\n    // vote_count,\r\n    id,\r\n  } = movie;\r\n  const movieId = Number(useParams().id);\r\n\r\n  const favoriteToggle = () => {\r\n    const getFavorite = getFromStorage(\"FavoriteMovie\");\r\n    if (getFavorite && getFavorite.find((item) => item.id === movieId)) {\r\n      saveToStorage(\"FavoriteMovie\", [...getFavorite.filter((item) => item.id !== movieId)]);\r\n      setFavorite(false);\r\n      return;\r\n    }\r\n    const newFavorite = { poster_path: poster_path, backdrop_path: backdrop_path, id: id, title: title };\r\n    setFavorite(true);\r\n    if (getFavorite) {\r\n      saveToStorage(\"FavoriteMovie\", [newFavorite, ...getFavorite]);\r\n      return;\r\n    }\r\n\r\n    saveToStorage(\"FavoriteMovie\", [newFavorite]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loaderToggle(true);\r\n    const getFavorite = getFromStorage(\"FavoriteMovie\");\r\n    if (getFavorite && movieId && getFavorite.find((item) => item.id === movieId)) {\r\n      setFavorite(true);\r\n    }\r\n    request(\"get\", getMovie(movieId))\r\n      .then((response) => setMovie(response))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => loaderToggle(false));\r\n  }, [loaderToggle, match.url, movieId, getFromStorage]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"singleMovie\">\r\n        {movie ? (\r\n          <div className=\"singleMovie__container\">\r\n            <img className=\"singleMovie__poster\" alt={title} src={poster_path ? imgUrlOriginal + poster_path : backdrop_path ? imgUrlOriginal + backdrop_path : imgNon}></img>\r\n            <ul className=\"singleMovie__info\">\r\n              {title && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Title: </span> {title}\r\n                </li>\r\n              )}\r\n              {original_title !== title && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Original title: </span> {original_title}\r\n                </li>\r\n              )}\r\n              {overview && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Overview: </span> {overview}\r\n                </li>\r\n              )}\r\n              {vote_average > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item--center\">\r\n                  <Rating readOnly={true} name=\"customized-10\" defaultValue={vote_average} max={10} precision={0.5} size=\"large\" />\r\n                  {/* <span>Rate: </span> {vote_average}/{vote_count} */}\r\n                </li>\r\n              )}\r\n              {budget > 0 && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Budget: </span> {budget}$\r\n                </li>\r\n              )}\r\n              {revenue > 0 && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>revenue: </span> {revenue}$\r\n                </li>\r\n              )}\r\n              {genres.length > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item-list\">\r\n                  <span>genres: </span>\r\n                  <ul>\r\n                    {genres.map((item) => (\r\n                      <li key={item.id}>{item.name}</li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              )}\r\n              {release_date && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Data: </span> {release_date}\r\n                </li>\r\n              )}\r\n              {runtime > 0 && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>runtime: </span> {`${Math.trunc(runtime / 60)}:${runtime % 60 < 10 ? (runtime % 60) + \"0\" : runtime % 60}`}\r\n                </li>\r\n              )}\r\n              {production_companies.length > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item-list\">\r\n                  <span>Production companies: </span>\r\n                  <ul>\r\n                    {production_companies.map((item) => (\r\n                      <li key={item.name}>\r\n                        {item.name} {item.origin_country && \"(\" + item.origin_country + \")\"}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              )}\r\n              {spoken_languages.length > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item-list\">\r\n                  <span>languages: </span>\r\n                  <ul>\r\n                    {spoken_languages.map((item) => (\r\n                      <li key={item.name}>\r\n                        {item.name} ({item.iso_639_1})\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              )}\r\n              {production_countries.length > 0 && (\r\n                <li className=\"singleMovie__item singleMovie__item-list\">\r\n                  <span>production countries: </span>{\" \"}\r\n                  <ul>\r\n                    {production_countries.map((item) => (\r\n                      <li key={item.iso_3166_1}>\r\n                        {item.name}({item.iso_3166_1})\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              )}\r\n              {popularity > 0 && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Popularity: </span> {popularity}\r\n                </li>\r\n              )}\r\n              {status && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Status: </span> {status}\r\n                </li>\r\n              )}\r\n              {tagline && (\r\n                <li className=\"singleMovie__item\">\r\n                  <span>Tag line: </span> {tagline}\r\n                </li>\r\n              )}\r\n\r\n              <li className=\"singleMovie__item\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={favoriteToggle}>\r\n                  {favorite ? \"remove from\" : \"add to\"} favorite\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  <NavLink to={`${url}/cast`}>Actors</NavLink>\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  <NavLink to={`${url}/trailer`}>trailer</NavLink>\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" href={homepage} target=\"_blank\" disabled={homepage ? false : true}>\r\n                  homepage\r\n                </Button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n          <h1 className=\"errorMessage\">\r\n            404\r\n            <br />\r\n            Information not found\r\n          </h1>\r\n        )}\r\n        <Suspense fallback={<p>Compaling...</p>}>\r\n          <Switch>\r\n            <Route path={`${url}/reviews`} render={(props) => <Reviews {...props} id={id} loaderToggle={loaderToggle} />} />\r\n            <Route path={`${url}/cast`} render={(props) => <Cast {...props} id={id} loaderToggle={loaderToggle} />} />\r\n            <Route path={`${url}/trailer`} render={(props) => <Trailer {...props} movieId={id} loaderToggle={loaderToggle} />} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Storage(MovieDetailsPage);\r\n\r\nMovieDetailsPage.propTypes = {\r\n  loaderToggle: PropTypes.func.isRequired,\r\n  match: PropTypes.object.isRequired,\r\n};\r\n","// const img = [\"w500\", \"original\"];\r\n\r\nexport const imgUrl = \"https://image.tmdb.org/t/p/w500/\";\r\nexport const imgUrlOriginal = \"https://image.tmdb.org/t/p/original/\";\r\nexport const imgNon = \"https://cdn.shopify.com/s/files/1/1841/2299/products/032_RGB_grande.jpg?v=1589096608\";\r\n\r\n// request\r\nexport const API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const URL = \"https://api.themoviedb.org/3\";\r\nexport const LANG = \"&language=en-US\";\r\nexport const region = \"&region=ua\";\r\nexport const year = \"&primary_release_year=2020\";\r\nexport const adult = \"&include_adult=false\";\r\n","import axios from \"axios\";\r\n\r\nimport { API_KEY, URL, LANG, region, year, adult } from \"./vars\";\r\n\r\nexport const getHomeMovie = (page, homeLoad) => {\r\n  return `${URL}/movie/${homeLoad}?api_key=${API_KEY}${region}&page=${page}${year}`;\r\n};\r\n\r\nexport const getSearch = (search, page = 1) => {\r\n  return `${URL}/search/movie?api_key=${API_KEY}${LANG}&query=${search}&page=${page}${adult}`;\r\n};\r\n\r\nexport const getMovie = (id, type = \"\") => {\r\n  return `${URL}/movie/${id}${type}?api_key=${API_KEY}`;\r\n};\r\nexport const getActors = (id) => {\r\n  return `${URL}/credit/${id}?api_key=${API_KEY}`;\r\n};\r\nexport const request = async (method, url, body = null) => {\r\n  const result = await axios[method](url, body);\r\n  return result.data;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nconst withStorage = (NestedComponents) => {\r\n  return class extends Component {\r\n    saveToStorage = (key, value) => {\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    };\r\n    getFromStorage = (key) => {\r\n      try {\r\n        const value = localStorage.getItem(key);\r\n        return value ? JSON.parse(value) : null;\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    };\r\n    removeFromStorage = (key) => {\r\n      try {\r\n        localStorage.removeItem(key);\r\n      } catch (error) {\r\n        throw new Error(error);\r\n      }\r\n    };\r\n    render() {\r\n      return <NestedComponents {...this.props} {...this} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default withStorage;\r\n"],"sourceRoot":""}